### Generated by rprotoc. DO NOT EDIT!
### <proto file: build.proto>
# import "cache.proto";
# 
# message BuildBegin {
#     // This tightly couples the binary interface of the builds to the cache, it
#     // might be cleaner to make this just a 'bytes' field and pass it around
#     // without types.
#     required CacheReference SourceCache = 1;
#     required string Project = 2;
#     // This config data should be abstracted out, because it's xcode specific.
#     required string Target = 3;
#     required string ConfigName = 4;
#     required string SDK = 5;
# 
#     // Check size of this before sending, should be pretty small.
#     required bytes Certificate = 6;
#     required bytes ProvisioningProfile = 7;
# }
# 
# message BuildRequest {
#     enum RequestType {
#         Request_Begin = 1;
#     }
#     required RequestType Type = 1;
#     optional BuildBegin Begin = 2;
# }
# 
# message BuildSuccess {
#     //required bytes IPA = 1;
#     //required bytes Manifest = 2;
# }
# 
# message BuildFailure {
#     required string ErrorMessage = 1;
# }
# 
# message BuildResponse {
#     enum ResponseType {
#         Response_Success = 1;
#         Response_Failure = 2;
#         // Bulk data responses.
#     }
#     required ResponseType Type = 1;
#     optional BuildSuccess Success = 2;
#     optional BuildFailure Failure = 3;
# }

require 'protobuf/message/message'
require 'protobuf/message/enum'
require 'protobuf/message/service'
require 'protobuf/message/extend'

# @HACK
require 'protocol/cache.pb'
class BuildBegin < ::Protobuf::Message
  defined_in __FILE__
  required :CacheReference, :SourceCache, 1
  required :string, :Project, 2
  required :string, :Target, 3
  required :string, :ConfigName, 4
  required :string, :SDK, 5
  required :bytes, :Certificate, 6
  required :bytes, :ProvisioningProfile, 7
end
class BuildRequest < ::Protobuf::Message
  defined_in __FILE__
  class RequestType < ::Protobuf::Enum
    defined_in __FILE__
    Request_Begin = value(:Request_Begin, 1)
  end
  required :RequestType, :Type, 1
  optional :BuildBegin, :Begin, 2
end
class BuildSuccess < ::Protobuf::Message
  defined_in __FILE__
end
class BuildFailure < ::Protobuf::Message
  defined_in __FILE__
  required :string, :ErrorMessage, 1
end
class BuildResponse < ::Protobuf::Message
  defined_in __FILE__
  class ResponseType < ::Protobuf::Enum
    defined_in __FILE__
    Response_Success = value(:Response_Success, 1)
    Response_Failure = value(:Response_Failure, 2)
  end
  required :ResponseType, :Type, 1
  optional :BuildSuccess, :Success, 2
  optional :BuildFailure, :Failure, 3
end
